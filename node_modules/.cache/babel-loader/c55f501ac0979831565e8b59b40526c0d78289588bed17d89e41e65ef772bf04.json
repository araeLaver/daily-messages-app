{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8005';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\nexport const messageService = {\n  // Ïô∏Î∂Ä APIÏóêÏÑú Î™ÖÏñ∏ Í∞ÄÏ†∏Ïò§Í∏∞\n  async getExternalQuote() {\n    try {\n      const response = await fetch('https://api.quotable.io/random?tags=inspirational,motivational,wisdom,success');\n      const data = await response.json();\n      return {\n        id: data._id,\n        text: data.content,\n        author: data.author,\n        category: data.tags[0] || 'ÏòÅÍ∞ê',\n        source: 'quotable_api'\n      };\n    } catch (error) {\n      console.error('Ïô∏Î∂Ä Î™ÖÏñ∏ API Ïã§Ìå®:', error);\n      return null;\n    }\n  },\n  // ÎûúÎç§ Î©îÏãúÏßÄ Í∞ÄÏ†∏Ïò§Í∏∞ (Î°úÏª¨ DB + Ïô∏Î∂Ä API)\n  async getRandomMessage(filters = {}) {\n    // 50% ÌôïÎ•†Î°ú Ïô∏Î∂Ä API ÏÇ¨Ïö©\n    if (Math.random() > 0.5) {\n      const externalQuote = await this.getExternalQuote();\n      if (externalQuote) return externalQuote;\n    }\n    try {\n      const params = new URLSearchParams();\n      if (filters.category) params.append('category', filters.category);\n      if (filters.time_of_day) params.append('time_of_day', filters.time_of_day);\n      if (filters.season) params.append('season', filters.season);\n      const response = await api.get(`/messages/random?${params}`);\n      return response.data;\n    } catch (error) {\n      console.error('Î©îÏãúÏßÄ Ï°∞Ìöå Ïã§Ìå®:', error);\n\n      // Ïô∏Î∂Ä API Ïû¨ÏãúÎèÑ\n      const externalQuote = await this.getExternalQuote();\n      if (externalQuote) return externalQuote;\n\n      // ÏµúÏ¢Ö Ìè¥Î∞± Î©îÏãúÏßÄ\n      return {\n        id: 'fallback',\n        text: 'Ïò§ÎäòÎèÑ ÏÉàÎ°úÏö¥ Í∏∞ÌöåÍ∞Ä ÎãπÏã†ÏùÑ Í∏∞Îã§Î¶¨Í≥† ÏûàÏäµÎãàÎã§. üåÖ',\n        author: 'Daily Messages',\n        category: 'ÏÉàÎ°úÏö¥ ÏãúÏûë',\n        source: 'fallback'\n      };\n    }\n  },\n  // Î©îÏãúÏßÄ ÌÜµÍ≥Ñ\n  async getStats() {\n    try {\n      const response = await api.get('/messages/stats');\n      return response.data;\n    } catch (error) {\n      console.error('ÌÜµÍ≥Ñ Ï°∞Ìöå Ïã§Ìå®:', error);\n      return {\n        total_messages: 0,\n        by_category: {},\n        by_source: {}\n      };\n    }\n  },\n  // Ïπ¥ÌÖåÍ≥†Î¶¨ Î™©Î°ù\n  async getCategories() {\n    try {\n      const response = await api.get('/messages/categories');\n      return response.data.categories;\n    } catch (error) {\n      console.error('Ïπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå Ïã§Ìå®:', error);\n      return ['ÏÉàÎ°úÏö¥ ÏãúÏûë', 'ÎèôÍ∏∞Î∂ÄÏó¨', 'ÏûêÏã†Í∞ê', 'ÏÑ±Ïû•'];\n    }\n  },\n  // Ìó¨Ïä§ Ï≤¥ÌÅ¨\n  async checkHealth() {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      console.error('Ìó¨Ïä§ Ï≤¥ÌÅ¨ Ïã§Ìå®:', error);\n      return {\n        status: 'unhealthy'\n      };\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","messageService","getExternalQuote","response","fetch","data","json","id","_id","text","content","author","category","tags","source","error","console","getRandomMessage","filters","Math","random","externalQuote","params","URLSearchParams","append","time_of_day","season","get","getStats","total_messages","by_category","by_source","getCategories","categories","checkHealth","status"],"sources":["C:/Develop/unble/daily-start-messages/morning-app-react/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8005';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n});\r\n\r\nexport const messageService = {\r\n  // Ïô∏Î∂Ä APIÏóêÏÑú Î™ÖÏñ∏ Í∞ÄÏ†∏Ïò§Í∏∞\r\n  async getExternalQuote() {\r\n    try {\r\n      const response = await fetch('https://api.quotable.io/random?tags=inspirational,motivational,wisdom,success');\r\n      const data = await response.json();\r\n      return {\r\n        id: data._id,\r\n        text: data.content,\r\n        author: data.author,\r\n        category: data.tags[0] || 'ÏòÅÍ∞ê',\r\n        source: 'quotable_api'\r\n      };\r\n    } catch (error) {\r\n      console.error('Ïô∏Î∂Ä Î™ÖÏñ∏ API Ïã§Ìå®:', error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // ÎûúÎç§ Î©îÏãúÏßÄ Í∞ÄÏ†∏Ïò§Í∏∞ (Î°úÏª¨ DB + Ïô∏Î∂Ä API)\r\n  async getRandomMessage(filters = {}) {\r\n    // 50% ÌôïÎ•†Î°ú Ïô∏Î∂Ä API ÏÇ¨Ïö©\r\n    if (Math.random() > 0.5) {\r\n      const externalQuote = await this.getExternalQuote();\r\n      if (externalQuote) return externalQuote;\r\n    }\r\n\r\n    try {\r\n      const params = new URLSearchParams();\r\n      if (filters.category) params.append('category', filters.category);\r\n      if (filters.time_of_day) params.append('time_of_day', filters.time_of_day);\r\n      if (filters.season) params.append('season', filters.season);\r\n      \r\n      const response = await api.get(`/messages/random?${params}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Î©îÏãúÏßÄ Ï°∞Ìöå Ïã§Ìå®:', error);\r\n      \r\n      // Ïô∏Î∂Ä API Ïû¨ÏãúÎèÑ\r\n      const externalQuote = await this.getExternalQuote();\r\n      if (externalQuote) return externalQuote;\r\n      \r\n      // ÏµúÏ¢Ö Ìè¥Î∞± Î©îÏãúÏßÄ\r\n      return {\r\n        id: 'fallback',\r\n        text: 'Ïò§ÎäòÎèÑ ÏÉàÎ°úÏö¥ Í∏∞ÌöåÍ∞Ä ÎãπÏã†ÏùÑ Í∏∞Îã§Î¶¨Í≥† ÏûàÏäµÎãàÎã§. üåÖ',\r\n        author: 'Daily Messages',\r\n        category: 'ÏÉàÎ°úÏö¥ ÏãúÏûë',\r\n        source: 'fallback'\r\n      };\r\n    }\r\n  },\r\n\r\n  // Î©îÏãúÏßÄ ÌÜµÍ≥Ñ\r\n  async getStats() {\r\n    try {\r\n      const response = await api.get('/messages/stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('ÌÜµÍ≥Ñ Ï°∞Ìöå Ïã§Ìå®:', error);\r\n      return { total_messages: 0, by_category: {}, by_source: {} };\r\n    }\r\n  },\r\n\r\n  // Ïπ¥ÌÖåÍ≥†Î¶¨ Î™©Î°ù\r\n  async getCategories() {\r\n    try {\r\n      const response = await api.get('/messages/categories');\r\n      return response.data.categories;\r\n    } catch (error) {\r\n      console.error('Ïπ¥ÌÖåÍ≥†Î¶¨ Ï°∞Ìöå Ïã§Ìå®:', error);\r\n      return ['ÏÉàÎ°úÏö¥ ÏãúÏûë', 'ÎèôÍ∏∞Î∂ÄÏó¨', 'ÏûêÏã†Í∞ê', 'ÏÑ±Ïû•'];\r\n    }\r\n  },\r\n\r\n  // Ìó¨Ïä§ Ï≤¥ÌÅ¨\r\n  async checkHealth() {\r\n    try {\r\n      const response = await api.get('/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Ìó¨Ïä§ Ï≤¥ÌÅ¨ Ïã§Ìå®:', error);\r\n      return { status: 'unhealthy' };\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}